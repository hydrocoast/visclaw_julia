# control PostScript files generated by GMT.jl
###################################################
"""
Rename /tmp/GMTtmp.ps to another name
"""
function moveps(outps::String)
    if !occursin("/",outps)
        outeps="./"*outps
    end
    tmpps = GMT.fname_out(Dict())[1]
    run(`mv $tmpps $outps`)
    return nothing
end
###################################################

###################################################
"""
Convert /tmp/GMTtmp.ps to eps file
"""
function saveaseps(outeps::String)
    if !occursin("/",outeps)
        outeps="./"*outeps
    end
    tmpps = GMT.fname_out(Dict())[1]
    run(`ps2eps -f -q $tmpps`)
    tmpeps= replace(tmpps, r"\.ps$" => ".eps")
    run(`mv $tmpeps $outeps`)
    return nothing
end
###################################################

###################################################
"""
Convert /tmp/GMTtmp.ps to png file
"""
function saveaspng(outpng::String; dpi=300::Int64)
    tmpps = GMT.fname_out(Dict())[1]
    run(`ps2eps -f -q $tmpps`)
    tmpeps= replace(tmpps, r"\.ps$" => ".eps")
    run(`convert -density $dpi $tmpeps $outpng`)
    return nothing
end
###################################################

###################################################
function ps2eps_series(nstep::Int64; savedir="."::String, savename="eta"::String,)
    for i = 1:nstep
        # filename
        filename = joinpath(savedir,savename)*@sprintf("%03d",i-1)*".ps"
        if !isfile(filename); disp("Not found: $filename"); continue; end;
        run(`ps2eps -f -q $filename`)
        run(`rm $filename`)
    end
    return nothing
end
###################################################
