# control PostScript files generated by GMT.jl
###################################################
"""
Rename /tmp/GMTtmp.ps to another name
"""
function moveps(outps::String)
    if !occursin("/",outps)
        outeps="./"*outps
    end
    tmpps = GMT.fname_out(Dict())[1]
    run(`mv $tmpps $outps`)
    return nothing
end
###################################################

###################################################
"""
Convert /tmp/GMTtmp.ps to eps file
"""
function saveaseps(outeps::String)
    if !occursin("/",outeps)
        outeps="./"*outeps
    end
    tmpps = GMT.fname_out(Dict())[1]
    run(`ps2eps -f -q $tmpps`)
    tmpeps= replace(tmpps, r"\.ps$" => ".eps")
    run(`mv $tmpeps $outeps`)
    return nothing
end
###################################################

###################################################
"""
Convert /tmp/GMTtmp.ps to png file
"""
function saveaspng(outpng::String; dpi=400::Int64)
    tmpps = GMT.fname_out(Dict())[1]
    run(`ps2eps -f -q $tmpps`)
    tmpeps= replace(tmpps, r"\.ps$" => ".eps")
    run(`convert -density $dpi $tmpeps $outpng`)
    return nothing
end
###################################################

###################################################
"""
Convert ps files to eps files
"""
function ps2eps_series(nstep::Int64; outinfo::Claw.OutputSpec=Claw.OutputSpec())
    # prefix
    prefix=joinpath(outinfo.figdir,outinfo.prefix)
    # each step
    for i = 1:nstep
        # filename
        filename = prefix*@sprintf("%03d",(i-1)+outinfo.start_number)*".ps"
        # check
        if !isfile(filename); println("Not found: $filename"); continue; end;
        # convert
        run(`ps2eps -f -q $filename`)
        # remove .ps file
        rm(filename)
    end
    return nothing
end
###################################################

###################################################
"""
Convert eps files to ong file
"""
function eps2png_series(nstep::Int64; outinfo::Claw.OutputSpec=Claw.OutputSpec(),
                        reserve=false::Bool)
    # prefix
    prefix=joinpath(outinfo.figdir,outinfo.prefix)
    dpi = outinfo.dpi
    # each step
    for i = 1:nstep
        # filename
        filename = prefix*@sprintf("%03d",i-1+outinfo.start_number)*".eps"
        pngname = replace(filename, r"\.eps" => ".png")
        # check
        if !isfile(filename); println("Not found: $filename"); continue; end;
        # convert
        run(`convert -density $dpi $filename $pngname`)
        # remove .eps file if true
        if !reserve; rm(filename); end
    end
    return nothing
end
###################################################
